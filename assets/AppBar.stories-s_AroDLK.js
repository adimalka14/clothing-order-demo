import{j as t,r as A}from"./iframe-DHdCyQc7.js";import{M as u}from"./Menu-DN9mbzG5.js";import{c as x}from"./createSvgIcon-CmoOJzP0.js";import{A as a}from"./AppBar-BR_Q7cPG.js";import{I as c}from"./IconButton-BEXbGOac.js";import{B as m}from"./Button-Bpmk2lLS.js";import{M as C}from"./Menu-DDL8Aghg.js";import{M as d}from"./MenuItem-DPXmOxkR.js";import"./useTimeout-D0EDQB2X.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./Box-BcJzKzeK.js";import"./Typography-OWveFrtZ.js";import"./ButtonBase-CK_ezoe2.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B1b5ttOM.js";import"./useSlot-DGgmD32f.js";import"./Grow-BdHuN-yp.js";import"./index-DuIt2Ws_.js";const g=x(t.jsx("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20"})),D={title:"base-component/AppBar",component:a,parameters:{docs:{description:{component:"Reusable AppBar component wrapping MUI AppBar. Supports flexible left and right content, customizable title position, and growth."}}},argTypes:{title:{control:"text",description:"The title text or node to display in the AppBar"},position:{control:"select",options:["fixed","static","absolute"],description:"The position of the AppBar in the layout"},titleGrow:{control:"boolean",description:"If true, the title will take up remaining space (flexGrow = 1)"},titlePosition:{control:"select",options:["left","center","right"],description:"Text alignment of the title"}}},o=e=>t.jsx(a,{...e});o.args={title:"My App",titleGrow:!1,titlePosition:"left"};o.parameters={docs:{description:{story:"A basic AppBar with just a title."}}};const n=e=>t.jsx(a,{...e,leftContent:t.jsx(c,{color:"inherit",children:t.jsx(u,{})})});n.args={title:"App with Left Icon",titleGrow:!1,titlePosition:"left"};n.parameters={docs:{description:{story:"AppBar with a left-side icon button (e.g., menu icon)."}}};const r=e=>t.jsx(a,{...e,rightContent:t.jsx(m,{color:"inherit",children:"Login"})});r.args={title:"App with Right Button",titleGrow:!1,titlePosition:"left"};r.parameters={docs:{description:{story:"AppBar with a right-side login button."}}};const i=e=>{const[p,h]=A.useState(null),f=B=>{h(B.currentTarget)},l=()=>{h(null)};return t.jsx(a,{...e,rightContent:t.jsxs(t.Fragment,{children:[t.jsx(c,{color:"inherit",onClick:f,children:t.jsx(g,{})}),t.jsxs(C,{anchorEl:p,open:!!p,onClose:l,children:[t.jsx(d,{onClick:l,children:"Profile"}),t.jsx(d,{onClick:l,children:"Logout"})]})]})})};i.args={title:"App with Right Menu",titleGrow:!1,titlePosition:"left"};i.parameters={docs:{description:{story:"AppBar with a right-side menu (e.g., user profile)."}}};const s=e=>t.jsx(a,{...e,leftContent:t.jsx(c,{color:"inherit",children:t.jsx(u,{})}),rightContent:t.jsxs(t.Fragment,{children:[t.jsx(m,{color:"inherit",children:"Login"}),t.jsx(c,{color:"inherit",children:t.jsx(g,{})})]})});s.args={title:"Full AppBar",titleGrow:!1,titlePosition:"left"};s.parameters={docs:{description:{story:"AppBar with both left and right content."}}};o.__docgenInfo={description:"",methods:[],displayName:"Default"};n.__docgenInfo={description:"",methods:[],displayName:"WithLeftIcon"};r.__docgenInfo={description:"",methods:[],displayName:"WithRightButton"};i.__docgenInfo={description:"",methods:[],displayName:"WithRightMenu"};s.__docgenInfo={description:"",methods:[],displayName:"LeftAndRightContent"};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"args => <AppBar {...args} />",...o.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`args => <AppBar {...args} leftContent={<IconButton color="inherit">\r
                <MenuIcon />\r
            </IconButton>} />`,...n.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:'args => <AppBar {...args} rightContent={<Button color="inherit">Login</Button>} />',...r.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`args => {
  const [anchorEl, setAnchorEl] = useState(null);
  const handleMenu = event => {
    setAnchorEl(event.currentTarget);
  };
  const handleClose = () => {
    setAnchorEl(null);
  };
  return <AppBar {...args} rightContent={<>\r
                    <IconButton color="inherit" onClick={handleMenu}>\r
                        <AccountCircle />\r
                    </IconButton>\r
                    <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\r
                        <MenuItem onClick={handleClose}>Profile</MenuItem>\r
                        <MenuItem onClick={handleClose}>Logout</MenuItem>\r
                    </Menu>\r
                </>} />;
}`,...i.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`args => <AppBar {...args} leftContent={<IconButton color="inherit">\r
                <MenuIcon />\r
            </IconButton>} rightContent={<>\r
                <Button color="inherit">Login</Button>\r
                <IconButton color="inherit">\r
                    <AccountCircle />\r
                </IconButton>\r
            </>} />`,...s.parameters?.docs?.source}}};const F=["Default","WithLeftIcon","WithRightButton","WithRightMenu","LeftAndRightContent"];export{o as Default,s as LeftAndRightContent,n as WithLeftIcon,r as WithRightButton,i as WithRightMenu,F as __namedExportsOrder,D as default};
